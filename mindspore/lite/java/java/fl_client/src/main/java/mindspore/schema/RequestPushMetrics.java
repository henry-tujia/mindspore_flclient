// automatically generated by the FlatBuffers compiler, do not modify

package mindspore.schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class RequestPushMetrics extends Table {
  public static RequestPushMetrics getRootAsRequestPushMetrics(ByteBuffer _bb) { return getRootAsRequestPushMetrics(_bb, new RequestPushMetrics()); }
  public static RequestPushMetrics getRootAsRequestPushMetrics(ByteBuffer _bb, RequestPushMetrics obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public RequestPushMetrics __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float loss() { int o = __offset(4); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float accuracy() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createRequestPushMetrics(FlatBufferBuilder builder,
      float loss,
      float accuracy) {
    builder.startObject(2);
    RequestPushMetrics.addAccuracy(builder, accuracy);
    RequestPushMetrics.addLoss(builder, loss);
    return RequestPushMetrics.endRequestPushMetrics(builder);
  }

  public static void startRequestPushMetrics(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addLoss(FlatBufferBuilder builder, float loss) { builder.addFloat(0, loss, 0.0f); }
  public static void addAccuracy(FlatBufferBuilder builder, float accuracy) { builder.addFloat(1, accuracy, 0.0f); }
  public static int endRequestPushMetrics(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

