// automatically generated by the FlatBuffers compiler, do not modify

package mindspore.schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class RequestUpdateAndCalMutualInformation extends Table {
  public static RequestUpdateAndCalMutualInformation getRootAsRequestUpdateAndCalMutualInformation(ByteBuffer _bb) { return getRootAsRequestUpdateAndCalMutualInformation(_bb, new RequestUpdateAndCalMutualInformation()); }
  public static RequestUpdateAndCalMutualInformation getRootAsRequestUpdateAndCalMutualInformation(ByteBuffer _bb, RequestUpdateAndCalMutualInformation obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public RequestUpdateAndCalMutualInformation __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String flId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer flIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer flIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String mul() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer mulAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer mulInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String timestamp() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer timestampAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer timestampInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createRequestUpdateAndCalMutualInformation(FlatBufferBuilder builder,
      int fl_idOffset,
      int mulOffset,
      int timestampOffset) {
    builder.startObject(3);
    RequestUpdateAndCalMutualInformation.addTimestamp(builder, timestampOffset);
    RequestUpdateAndCalMutualInformation.addMul(builder, mulOffset);
    RequestUpdateAndCalMutualInformation.addFlId(builder, fl_idOffset);
    return RequestUpdateAndCalMutualInformation.endRequestUpdateAndCalMutualInformation(builder);
  }

  public static void startRequestUpdateAndCalMutualInformation(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addFlId(FlatBufferBuilder builder, int flIdOffset) { builder.addOffset(0, flIdOffset, 0); }
  public static void addMul(FlatBufferBuilder builder, int mulOffset) { builder.addOffset(1, mulOffset, 0); }
  public static void addTimestamp(FlatBufferBuilder builder, int timestampOffset) { builder.addOffset(2, timestampOffset, 0); }
  public static int endRequestUpdateAndCalMutualInformation(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

