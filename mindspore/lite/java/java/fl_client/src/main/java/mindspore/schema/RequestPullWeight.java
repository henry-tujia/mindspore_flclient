// automatically generated by the FlatBuffers compiler, do not modify

package mindspore.schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class RequestPullWeight extends Table {
  public static RequestPullWeight getRootAsRequestPullWeight(ByteBuffer _bb) { return getRootAsRequestPullWeight(_bb, new RequestPullWeight()); }
  public static RequestPullWeight getRootAsRequestPullWeight(ByteBuffer _bb, RequestPullWeight obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public RequestPullWeight __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int iteration() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String weightNames(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int weightNamesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createRequestPullWeight(FlatBufferBuilder builder,
      int iteration,
      int weight_namesOffset) {
    builder.startObject(2);
    RequestPullWeight.addWeightNames(builder, weight_namesOffset);
    RequestPullWeight.addIteration(builder, iteration);
    return RequestPullWeight.endRequestPullWeight(builder);
  }

  public static void startRequestPullWeight(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addIteration(FlatBufferBuilder builder, int iteration) { builder.addInt(0, iteration, 0); }
  public static void addWeightNames(FlatBufferBuilder builder, int weightNamesOffset) { builder.addOffset(1, weightNamesOffset, 0); }
  public static int createWeightNamesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startWeightNamesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endRequestPullWeight(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

