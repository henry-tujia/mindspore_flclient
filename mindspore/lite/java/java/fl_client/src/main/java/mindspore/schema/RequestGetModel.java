// automatically generated by the FlatBuffers compiler, do not modify

package mindspore.schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class RequestGetModel extends Table {
  public static RequestGetModel getRootAsRequestGetModel(ByteBuffer _bb) { return getRootAsRequestGetModel(_bb, new RequestGetModel()); }
  public static RequestGetModel getRootAsRequestGetModel(ByteBuffer _bb, RequestGetModel obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public RequestGetModel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String flName() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer flNameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer flNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public int iteration() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String timestamp() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer timestampAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer timestampInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createRequestGetModel(FlatBufferBuilder builder,
      int fl_nameOffset,
      int iteration,
      int timestampOffset) {
    builder.startObject(3);
    RequestGetModel.addTimestamp(builder, timestampOffset);
    RequestGetModel.addIteration(builder, iteration);
    RequestGetModel.addFlName(builder, fl_nameOffset);
    return RequestGetModel.endRequestGetModel(builder);
  }

  public static void startRequestGetModel(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addFlName(FlatBufferBuilder builder, int flNameOffset) { builder.addOffset(0, flNameOffset, 0); }
  public static void addIteration(FlatBufferBuilder builder, int iteration) { builder.addInt(1, iteration, 0); }
  public static void addTimestamp(FlatBufferBuilder builder, int timestampOffset) { builder.addOffset(2, timestampOffset, 0); }
  public static int endRequestGetModel(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

